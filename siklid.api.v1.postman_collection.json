{
	"info": {
		"_postman_id": "d7bc26fb-5ffa-42c4-8814-3ca5e1d69399",
		"name": "siklid.api.v1",
		"description": "# Introduction\nWhat does your API do?\n\n# Overview\nThings that the developers should know about\n\n# Authentication\nWhat is the preferred way of using the API?\n\n# Error Codes\nWhat errors and status codes can a user expect?\n\n# Rate limit\nIs there a limit to the number of requests a user can send?",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4828884"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "register.email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"const accessToken = jsonData.data.token.accessToken;",
									"const refreshToken = jsonData.data.token.refreshToken;",
									"const email = jsonData.data.user.email;",
									"",
									"pm.collectionVariables.set(\"accessToken\", accessToken);",
									"pm.collectionVariables.set(\"refreshToken\", refreshToken);",
									"pm.collectionVariables.set(\"email\", email);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "moemengaballa@gmail.com",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12345678",
									"type": "text"
								},
								{
									"key": "username",
									"value": "moemenGaballa",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base}}/auth/register/email",
							"host": [
								"{{base}}"
							],
							"path": [
								"auth",
								"register",
								"email"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"const accessToken = jsonData.data.token.accessToken;",
									"const refreshToken = jsonData.data.token.refreshToken;",
									"const email = jsonData.data.user.email;",
									"",
									"pm.collectionVariables.set(\"accessToken\", accessToken);",
									"pm.collectionVariables.set(\"refreshToken\", refreshToken);",
									"pm.collectionVariables.set(\"email\", email);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE2NjkwMTU4NzEsImV4cCI6MTY2OTAxOTQ3MSwicm9sZXMiOltdLCJlbWFpbCI6Im1vZW1lbmdhYmFsbGFAZ21haWwuY29tIn0.W2dgfylEACfFIEKwhaMF78vPC3Rl6pS6HduYoUiwtxkBvae1jU3OXeRhWtQmcPFD1mUTOkmLcs981rULk-5f7eo3869Ml415JGV4rRUgiU-qMkN-2k2MNBSu5oKz2EfXgd3Ds14tOg4MadxKrl5DyfiWQ26O6JSG8DxG8Bf1sbgtPN7muVGcV7vSjrMDsAEkelsH6QzAIQS-JuYNDBt6CeRPukWWJcOHe84KeBhFAPwu3SgwOO50N072RB7efEbEG5UntRhHwXClBZmMNSvw3Cahgrw1z9qcXFIzWFGQY3XvWSIaHCaWwW94cbjDzGxskrqNSHi_rM2mJpigHxAGEg",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Content-Type header generated by Postman.",
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{base}}/auth/logout",
							"host": [
								"{{base}}"
							],
							"path": [
								"auth",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "login.email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"const accessToken = jsonData.data.token.accessToken;",
									"const refreshToken = jsonData.data.token.refreshToken;",
									"const email = jsonData.data.user.email;",
									"",
									"pm.collectionVariables.set(\"accessToken\", accessToken);",
									"pm.collectionVariables.set(\"refreshToken\", refreshToken);",
									"pm.collectionVariables.set(\"email\", email);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"moemengaballa@gmail.com\",\n    \"password\": \"12345678\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/auth/login/email",
							"host": [
								"{{base}}"
							],
							"path": [
								"auth",
								"login",
								"email"
							]
						}
					},
					"response": []
				},
				{
					"name": "token.refresh",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"",
									"const accessToken = jsonData.token;",
									"const refreshToken = jsonData.refreshToken;",
									"",
									"pm.collectionVariables.set(\"accessToken\", accessToken);",
									"pm.collectionVariables.set(\"refreshToken\", refreshToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "refreshToken",
									"value": "{{refreshToken}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base}}/auth/token/refresh",
							"host": [
								"{{base}}"
							],
							"path": [
								"auth",
								"token",
								"refresh"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "box",
			"item": [
				{
					"name": "box.create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"const boxId = jsonData.data.id;",
									"pm.collectionVariables.set(\"boxId\", boxId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "{{$randomWord}}",
									"type": "text"
								},
								{
									"key": "description",
									"value": "{{$randomLoremParagraph}} #foo #bar",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{base}}/boxes",
							"host": [
								"{{base}}"
							],
							"path": [
								"boxes"
							]
						}
					},
					"response": []
				},
				{
					"name": "box.delete",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{base}}/boxes/{{boxId}}",
							"host": [
								"{{base}}"
							],
							"path": [
								"boxes",
								"{{boxId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "box.show",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{base}}/boxes/{{boxId}}",
							"host": [
								"{{base}}"
							],
							"path": [
								"boxes",
								"{{boxId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "box.index",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();",
									"const items = jsonData.data;",
									"",
									"if(items.length > 0) {",
									"    const lastItem = items[items.length - 1];",
									"    pm.collectionVariables.set('boxCursor', lastItem.id);",
									"}else {",
									"    pm.collectionVariables.set('boxCursor', '');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{base}}/boxes?cursor={{boxCursor}}",
							"host": [
								"{{base}}"
							],
							"path": [
								"boxes"
							],
							"query": [
								{
									"key": "cursor",
									"value": "{{boxCursor}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "https://localhost"
		},
		{
			"key": "version",
			"value": "v1"
		},
		{
			"key": "base",
			"value": "{{host}}/api/{{version}}"
		},
		{
			"key": "__SEPARATOR__",
			"value": "",
			"type": "string",
			"disabled": true
		},
		{
			"key": "email",
			"value": "<email>"
		},
		{
			"key": "accessToken",
			"value": "<accessToken>",
			"type": "string"
		},
		{
			"key": "refreshToken",
			"value": "<refreshToken>",
			"type": "string"
		},
		{
			"key": "__SEPARATOR__",
			"value": "",
			"type": "string",
			"disabled": true
		},
		{
			"key": "boxId",
			"value": "<boxId>",
			"type": "string"
		},
		{
			"key": "boxCursor",
			"value": "<boxCursor>"
		}
	]
}